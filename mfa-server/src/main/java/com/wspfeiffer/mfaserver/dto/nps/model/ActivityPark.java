/**
 * National Park Service
 * <p>This API is designed to provide authoritative National Park Service (NPS) data and content about parks and their facilities, events, news, alerts, and more. Explore the NPS API below and even try to make API calls. In order to try an API call, you'll need to click on the \"Authorize\" button below and add your API key. If you don't have an API key yet, visit our <a href=\"https://www.nps.gov/subjects/developer/get-started.htm\">Get Started page</a>.</p>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.wspfeiffer.mfaserver.dto.nps.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ActivityPark
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2023-11-26T07:44:36.946-05:00")
public class ActivityPark   {
  @JsonProperty("total")
  private String total = null;

  @JsonProperty("data")
  private List<ActivityParkData> data = new ArrayList<ActivityParkData>();

  @JsonProperty("limit")
  private String limit = null;

  @JsonProperty("start")
  private String start = null;

  public ActivityPark total(String total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  public String getTotal() {
    return total;
  }

  public void setTotal(String total) {
    this.total = total;
  }

  public ActivityPark data(List<ActivityParkData> data) {
    this.data = data;
    return this;
  }

  public ActivityPark addDataItem(ActivityParkData dataItem) {
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  public List<ActivityParkData> getData() {
    return data;
  }

  public void setData(List<ActivityParkData> data) {
    this.data = data;
  }

  public ActivityPark limit(String limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  public String getLimit() {
    return limit;
  }

  public void setLimit(String limit) {
    this.limit = limit;
  }

  public ActivityPark start(String start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  public String getStart() {
    return start;
  }

  public void setStart(String start) {
    this.start = start;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityPark activityPark = (ActivityPark) o;
    return Objects.equals(this.total, activityPark.total) &&
        Objects.equals(this.data, activityPark.data) &&
        Objects.equals(this.limit, activityPark.limit) &&
        Objects.equals(this.start, activityPark.start);
  }

  @Override
  public int hashCode() {
    return Objects.hash(total, data, limit, start);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityPark {\n");
    
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

