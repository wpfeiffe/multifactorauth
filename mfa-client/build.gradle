plugins {
    id 'base'
    id 'java'
    id 'idea'
    id 'maven-publish'
}

group = 'com.wspfeiffer'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(21))
  }
}

processResources {
  dependsOn "buildAngular"
}

tasks.register('buildAngular', Exec) {
  // make sure the build task is executed only when appropriate files change
  inputs.files fileTree('src')

  // 'node_modules' appeared not reliable for dependency change detection (the task was rerun without changes)
  // though 'package.json' and 'package-lock.json' should be enough anyway
  inputs.file 'package.json'
  inputs.file 'package-lock.json'
  inputs.file 'angular.json'

  outputs.dir 'src/main/resources/public'


  // installAngular should be run prior to this task
  dependsOn "installAngular"

  // Add task to the standard build group
  group = BasePlugin.BUILD_GROUP
  List args = new ArrayList();

  // ng doesn't exist as a file in windows -> ng.cmd
  if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
    args << "ng.cmd"
  } else {
    args << "ng"
  }
  args << "build"
//    if (project.hasProperty("sourceMap")) {
  args << "--source-map"
//    }
  if (project.hasProperty("ngProd")) {
    args << "--configuration=production"
  }
  commandLine args

}

tasks.register('runAngular', Exec) {
  // installAngular should be run prior to this task
  dependsOn "installAngular"
  workingDir "$projectDir"
  inputs.dir "$projectDir"
  // Add task to the standard build group
  group = "application"
  // ng doesn't exist as a file in windows -> ng.cmd
  if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
    commandLine "ng.cmd", "serve"
  } else {
    commandLine "ng", "serve"
  }
}

tasks.register('installAngular', Exec) {
  workingDir "$projectDir"
  inputs.dir "$projectDir"
  group = BasePlugin.BUILD_GROUP
  dependsOn compileJava
  if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
    commandLine "npm.cmd", "install", "--legacy-peer-deps"
  } else {
    commandLine "npm", "install", "--legacy-peer-deps"
  }
}

jar {
    dependsOn buildAngular
}

buildAngular.doFirst {
    project.delete "${projectDir}/src/main/resources/public"
}

buildAngular.doLast {
    copy {
        from "${projectDir}/dist/mfa-client/browser"
        into "${projectDir}/src/main/resources/public"
    }
}

clean.doLast {
    project.delete "${projectDir}/src/main/resources/public"
    project.delete "${projectDir}/out/production/resources/public"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
